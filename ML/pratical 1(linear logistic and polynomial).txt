LINEAR REGRESSION
Perform linear regression on given data and show the predictions.

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

score_df=pd.read_csv(r"C:\Users\Hp\Documents\ML PRACT\position_sal.csv")
print(score_df.head())

X=score_df.iloc[:,1:-1].values
Y=score_df.iloc[:, -1].values
print("x=",X,"\n y=",Y)

X_train,X_test,Y_train, Y_test = train_test_split(X,Y,test_size=0.2, random_state=0)
print("x_train=",X_train,"\n Y_train=", Y_train)
print("x_test=",X_test,"\n Y_test=", Y_test)

regressor=LinearRegression()
regressor.fit(X_train, Y_train)
Y_pred=regressor.predict(X_test)
print("y_pred=",Y_pred)


==========================================================================
polynomial regression
#2 perform polynomial regression on the given data and show the predictions.import pandas as pd

from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.model_selection import train_test_split

score_df=pd.read_csv(r"C:\Users\Hp\Documents\ML PRACT\position_sal.csv")
print(score_df.head())

X=score_df.iloc[:,1:-1].values
Y=score_df.iloc[:, -1].values
print("x=",X,"\n y=",Y)

X_train,X_test,Y_train, Y_test = train_test_split(X,Y,test_size=0.2, random_state=0)
print("x_train=",X_train,"\n Y_train=", Y_train)
print("x_test=",X_test,"\n Y_test=", Y_test)
regressor=PolynomialFeatures(degree = 100)

x_poly_train= regressor.fit_transform(X_train)
x_poly_test= regressor.fit_transform(X_test)
lin_reg=LinearRegression()
lin_reg.fit(x_poly_train,Y_train)
y_pred=lin_reg.predict(x_poly_test)
print("y_pred=",y_pred)

=====================================================================
LOGISTIC REGRESSION
import pandas as  pd
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split

score_df = pd.read_csv(r"C:\Users\Hp\Documents\ML PRACT\position_sal.csv")
print(score_df.head(10))

X=score_df.iloc[:,1:-1].values
y=score_df.iloc[:,-1].values
print("x=",X,"\n y=", y)

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2, random_state=0)
print("x_train=",X_train,"\n y_train=", y_train)
print("x_test=",X_test,"\n y_test=", y_test)

sc_x=StandardScaler()
xtrain=sc_x.fit_transform(X_train)
xtest=sc_x.transform(X_test)
reg=LogisticRegression()
reg.fit(xtrain,y_train)      
y_pred=reg.predict(xtest)
print("y_pred=", y_pred)
