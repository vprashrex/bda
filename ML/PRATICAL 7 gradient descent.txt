
#Perform regression model parameters using gradient descent and visualize the mean square error per iteration for model evaluation.

import numpy as np
import matplotlib.pyplot as plt
x = np.array([1,3,5])
y = np.array([5,12,18])
w1 =((x*y).mean()- x.mean()*y.mean())//((x**2). mean () - (x.mean())**2)
w0 = y.mean() - w1*x.mean()
W0_new = 0
W1_new = 0
a = 0.04
MSE = np.array([])
for iteration in range(1,11): 
    y_pred = np.array([]) 
    error = np.array([]) 
    error_x = np.array([])
    W0 = W0_new
    W1 = W1_new
    for i in x:
        y_pred = np.append(y_pred, (W0 + W1*i)) 
    error = np.append(error,y_pred-y)
    error_x = np.append(error_x, error*x) 
    MSE_val = (error**2).mean() 
    MSE = np.append(MSE, MSE_val)
    W0_new = W0 - a*np.sum(error)
    W1_new = W1 - a*np.sum(error_x)

print('W0 by gradient descent = ',W0_new)
print('W1 by gradient descent = ',W1_new)
print('y_pred: ' ,y_pred)
print('error: ',error)

plt.plot(MSE,'b-o')
plt.title('mean square error per iteration')
plt.xlabel('iterations')
plt.ylabel('MSE value')
plt.show()